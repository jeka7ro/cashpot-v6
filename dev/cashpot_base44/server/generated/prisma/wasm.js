
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProviderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  avatar: 'avatar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CabinetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  model: 'model',
  manufacturer: 'manufacturer',
  providerId: 'providerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GameMixScalarFieldEnum = {
  id: 'id',
  name: 'name',
  providerId: 'providerId',
  games: 'games',
  gameCount: 'gameCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SlotMachineScalarFieldEnum = {
  id: 'id',
  serialNumber: 'serialNumber',
  manufacturer: 'manufacturer',
  providerId: 'providerId',
  cabinetId: 'cabinetId',
  gameMixId: 'gameMixId',
  locationId: 'locationId',
  productionYear: 'productionYear',
  denomination: 'denomination',
  maxBet: 'maxBet',
  rtp: 'rtp',
  gamingPlaces: 'gamingPlaces',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  invoiceNumber: 'invoiceNumber',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  serialNumber: 'serialNumber',
  locationId: 'locationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlatformScalarFieldEnum = {
  id: 'id',
  name: 'name',
  serialNumbers: 'serialNumbers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MetrologyScalarFieldEnum = {
  id: 'id',
  serialNumber: 'serialNumber',
  certificateType: 'certificateType',
  issueDate: 'issueDate',
  expiryDate: 'expiryDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MetrologyApprovalScalarFieldEnum = {
  id: 'id',
  name: 'name',
  dataEmitere: 'dataEmitere',
  dataExpirare: 'dataExpirare',
  providerId: 'providerId',
  cabinetId: 'cabinetId',
  gameMixId: 'gameMixId',
  softwareId: 'softwareId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MetrologyCommissionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  dataEmitere: 'dataEmitere',
  dataExpirare: 'dataExpirare',
  serialNumbers: 'serialNumbers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MetrologyAuthorityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MetrologySoftwareScalarFieldEnum = {
  id: 'id',
  name: 'name',
  version: 'version',
  providerId: 'providerId',
  cabinetId: 'cabinetId',
  gameMixId: 'gameMixId',
  serialNumbers: 'serialNumbers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  role: 'role',
  avatar: 'avatar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Provider: 'Provider',
  Location: 'Location',
  Cabinet: 'Cabinet',
  GameMix: 'GameMix',
  SlotMachine: 'SlotMachine',
  Company: 'Company',
  Invoice: 'Invoice',
  Platform: 'Platform',
  Metrology: 'Metrology',
  MetrologyApproval: 'MetrologyApproval',
  MetrologyCommission: 'MetrologyCommission',
  MetrologyAuthority: 'MetrologyAuthority',
  MetrologySoftware: 'MetrologySoftware',
  User: 'User'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/eugeniucazmal/dev/cashpot_base44/server/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/eugeniucazmal/dev/cashpot_base44/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Provider {\n  id                 String              @id @default(cuid())\n  name               String              @unique\n  avatar             String?\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  cabinets           Cabinet[]\n  gameMixes          GameMix[]\n  slots              SlotMachine[]\n  metrologyApprovals MetrologyApproval[]\n  metrologySoftware  MetrologySoftware[]\n}\n\nmodel Location {\n  id        String        @id @default(cuid())\n  name      String        @unique\n  address   String?\n  createdAt DateTime      @default(now())\n  updatedAt DateTime      @updatedAt\n  slots     SlotMachine[]\n  invoices  Invoice[]\n}\n\nmodel Cabinet {\n  id                 String              @id @default(cuid())\n  name               String\n  model              String?\n  manufacturer       String\n  providerId         String\n  provider           Provider            @relation(fields: [providerId], references: [id])\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  slots              SlotMachine[]\n  metrologyApprovals MetrologyApproval[]\n  metrologySoftware  MetrologySoftware[]\n\n  @@unique([name, manufacturer])\n}\n\nmodel GameMix {\n  id                 String              @id @default(cuid())\n  name               String\n  providerId         String\n  provider           Provider            @relation(fields: [providerId], references: [id])\n  games              String?\n  gameCount          Int?\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  slots              SlotMachine[]\n  metrologyApprovals MetrologyApproval[]\n  metrologySoftware  MetrologySoftware[]\n\n  @@unique([name, providerId])\n}\n\nmodel SlotMachine {\n  id             String    @id @default(cuid())\n  serialNumber   String    @unique\n  manufacturer   String\n  providerId     String\n  provider       Provider  @relation(fields: [providerId], references: [id])\n  cabinetId      String\n  cabinet        Cabinet   @relation(fields: [cabinetId], references: [id])\n  gameMixId      String?\n  gameMix        GameMix?  @relation(fields: [gameMixId], references: [id])\n  locationId     String?\n  location       Location? @relation(fields: [locationId], references: [id])\n  productionYear Int?\n  denomination   Float?\n  maxBet         Float?\n  rtp            Float?\n  gamingPlaces   Int       @default(1)\n  status         String    @default(\"active\")\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n}\n\nmodel Company {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  address   String?\n  phone     String?\n  email     String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Invoice {\n  id            String    @id @default(cuid())\n  invoiceNumber String    @unique\n  amount        Float\n  currency      String    @default(\"RON\")\n  status        String    @default(\"pending\")\n  serialNumber  String?\n  locationId    String?\n  location      Location? @relation(fields: [locationId], references: [id])\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n}\n\nmodel Platform {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  serialNumbers String?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n}\n\nmodel Metrology {\n  id              String    @id @default(cuid())\n  serialNumber    String\n  certificateType String    @default(\"Initiala\")\n  issueDate       DateTime?\n  expiryDate      DateTime?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n}\n\nmodel MetrologyApproval {\n  id           String             @id @default(cuid())\n  name         String\n  dataEmitere  DateTime?\n  dataExpirare DateTime?\n  providerId   String?\n  provider     Provider?          @relation(fields: [providerId], references: [id])\n  cabinetId    String?\n  cabinet      Cabinet?           @relation(fields: [cabinetId], references: [id])\n  gameMixId    String?\n  gameMix      GameMix?           @relation(fields: [gameMixId], references: [id])\n  softwareId   String?\n  software     MetrologySoftware? @relation(fields: [softwareId], references: [id])\n  createdAt    DateTime           @default(now())\n  updatedAt    DateTime           @updatedAt\n}\n\nmodel MetrologyCommission {\n  id            String    @id @default(cuid())\n  name          String\n  dataEmitere   DateTime?\n  dataExpirare  DateTime?\n  serialNumbers String?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n}\n\nmodel MetrologyAuthority {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  address   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel MetrologySoftware {\n  id            String              @id @default(cuid())\n  name          String\n  version       String?\n  providerId    String?\n  provider      Provider?           @relation(fields: [providerId], references: [id])\n  cabinetId     String?\n  cabinet       Cabinet?            @relation(fields: [cabinetId], references: [id])\n  gameMixId     String?\n  gameMix       GameMix?            @relation(fields: [gameMixId], references: [id])\n  serialNumbers String?\n  createdAt     DateTime            @default(now())\n  updatedAt     DateTime            @updatedAt\n  approvals     MetrologyApproval[]\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  username  String   @unique\n  email     String?  @unique\n  role      String   @default(\"user\")\n  avatar    String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "3005c2be309458e84ca705f11b0ccb1f9e60ffeb58901bb40aa7c6d842373257",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Provider\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cabinets\",\"kind\":\"object\",\"type\":\"Cabinet\",\"relationName\":\"CabinetToProvider\"},{\"name\":\"gameMixes\",\"kind\":\"object\",\"type\":\"GameMix\",\"relationName\":\"GameMixToProvider\"},{\"name\":\"slots\",\"kind\":\"object\",\"type\":\"SlotMachine\",\"relationName\":\"ProviderToSlotMachine\"},{\"name\":\"metrologyApprovals\",\"kind\":\"object\",\"type\":\"MetrologyApproval\",\"relationName\":\"MetrologyApprovalToProvider\"},{\"name\":\"metrologySoftware\",\"kind\":\"object\",\"type\":\"MetrologySoftware\",\"relationName\":\"MetrologySoftwareToProvider\"}],\"dbName\":null},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slots\",\"kind\":\"object\",\"type\":\"SlotMachine\",\"relationName\":\"LocationToSlotMachine\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToLocation\"}],\"dbName\":null},\"Cabinet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"Provider\",\"relationName\":\"CabinetToProvider\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slots\",\"kind\":\"object\",\"type\":\"SlotMachine\",\"relationName\":\"CabinetToSlotMachine\"},{\"name\":\"metrologyApprovals\",\"kind\":\"object\",\"type\":\"MetrologyApproval\",\"relationName\":\"CabinetToMetrologyApproval\"},{\"name\":\"metrologySoftware\",\"kind\":\"object\",\"type\":\"MetrologySoftware\",\"relationName\":\"CabinetToMetrologySoftware\"}],\"dbName\":null},\"GameMix\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"Provider\",\"relationName\":\"GameMixToProvider\"},{\"name\":\"games\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slots\",\"kind\":\"object\",\"type\":\"SlotMachine\",\"relationName\":\"GameMixToSlotMachine\"},{\"name\":\"metrologyApprovals\",\"kind\":\"object\",\"type\":\"MetrologyApproval\",\"relationName\":\"GameMixToMetrologyApproval\"},{\"name\":\"metrologySoftware\",\"kind\":\"object\",\"type\":\"MetrologySoftware\",\"relationName\":\"GameMixToMetrologySoftware\"}],\"dbName\":null},\"SlotMachine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"Provider\",\"relationName\":\"ProviderToSlotMachine\"},{\"name\":\"cabinetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cabinet\",\"kind\":\"object\",\"type\":\"Cabinet\",\"relationName\":\"CabinetToSlotMachine\"},{\"name\":\"gameMixId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameMix\",\"kind\":\"object\",\"type\":\"GameMix\",\"relationName\":\"GameMixToSlotMachine\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToSlotMachine\"},{\"name\":\"productionYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"denomination\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxBet\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"rtp\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"gamingPlaces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"InvoiceToLocation\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Platform\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumbers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Metrology\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificateType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MetrologyApproval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataEmitere\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dataExpirare\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"Provider\",\"relationName\":\"MetrologyApprovalToProvider\"},{\"name\":\"cabinetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cabinet\",\"kind\":\"object\",\"type\":\"Cabinet\",\"relationName\":\"CabinetToMetrologyApproval\"},{\"name\":\"gameMixId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameMix\",\"kind\":\"object\",\"type\":\"GameMix\",\"relationName\":\"GameMixToMetrologyApproval\"},{\"name\":\"softwareId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"software\",\"kind\":\"object\",\"type\":\"MetrologySoftware\",\"relationName\":\"MetrologyApprovalToMetrologySoftware\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MetrologyCommission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataEmitere\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dataExpirare\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serialNumbers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MetrologyAuthority\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MetrologySoftware\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"Provider\",\"relationName\":\"MetrologySoftwareToProvider\"},{\"name\":\"cabinetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cabinet\",\"kind\":\"object\",\"type\":\"Cabinet\",\"relationName\":\"CabinetToMetrologySoftware\"},{\"name\":\"gameMixId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameMix\",\"kind\":\"object\",\"type\":\"GameMix\",\"relationName\":\"GameMixToMetrologySoftware\"},{\"name\":\"serialNumbers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"MetrologyApproval\",\"relationName\":\"MetrologyApprovalToMetrologySoftware\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

